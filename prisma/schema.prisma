// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  username   String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  is_locked  Boolean  @default(false)
  is_deleted Boolean  @default(false)
  posts      Post[]   // Связь с Post
  forms      Forms[]  // Связь с Forms
  answers    Answers[] // Связь с Answers

  @@map("users")
}

model Post {
  id       Int      @id @default(autoincrement())
  title    String
  content  String
  authorId Int
  author   User     @relation(fields: [authorId], references: [id])
}

model Forms {
  id           Int       @id @default(autoincrement())
  userId       Int
  user         User      @relation(fields: [userId], references: [id])
  title        String
  descriptions String
  questions    Questions[] // Связь с Questions
  answers      Answers[]   // Связь с Answers
}

model Questions {
  id            Int      @id @default(autoincrement())
  formsId       Int
  form          Forms    @relation(fields: [formsId], references: [id])
  title         String
  descriptions  String
  visible       Int
  type          String
  answers       Answers[] // Связь с Answers
}

model Answers {
  id          Int      @id @default(autoincrement())
  userId      Int
  formId      Int
  questionId  Int
  answer      String

  user        User     @relation(fields: [userId], references: [id])
  form        Forms    @relation(fields: [formId], references: [id])
  question    Questions @relation(fields: [questionId], references: [id])

  @@map("answers")
}
