generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  username   String
  email      String    @unique
  password   String
  apiToken   String?   @unique
  created_at DateTime  @default(now())
  is_locked  Boolean   @default(false)
  is_deleted Boolean   @default(false)
  forms      Forms[]
  posts      Post[]
  answers    Answers[]

  @@map("users")
}

model Post {
  id       Int    @id @default(autoincrement())
  title    String
  content  String
  authorId Int
  author   User   @relation(fields: [authorId], references: [id])

  @@index([authorId], map: "Post_authorId_fkey")
}

model Forms {
  id           Int         @id @default(autoincrement())
  userId       Int
  title        String
  descriptions String
  user         User        @relation(fields: [userId], references: [id])
  questions    Questions[]
  answers      Answers[]

  @@index([userId], map: "Forms_userId_fkey")
}

model Questions {
  id           Int       @id @default(autoincrement())
  formsId      Int
  title        String
  descriptions String
  visible      Int
  type         String
  form         Forms     @relation(fields: [formsId], references: [id])
  answers      Answers[]

  @@index([formsId], map: "Questions_formsId_fkey")
}

model Answers {
  id         Int       @id @default(autoincrement())
  userId     Int
  formId     Int
  questionId Int
  answer     String
  form       Forms     @relation(fields: [formId], references: [id])
  question   Questions @relation(fields: [questionId], references: [id])
  user       User      @relation(fields: [userId], references: [id])

  @@index([formId], map: "answers_formId_fkey")
  @@index([questionId], map: "answers_questionId_fkey")
  @@index([userId], map: "answers_userId_fkey")
  @@map("answers")
}
